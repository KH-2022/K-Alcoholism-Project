<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- Oracle 18c DB Connection
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
		<property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@localhost:1521/xepdb1" />
		<property name="username" value="kapuser" />
		<property name="password" value="kap1234" />
	</bean> -->
	
	<!-- Oracle 11g DB Connection
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
		<property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="kapuser" />
		<property name="password" value="kap1234" />
	</bean> -->
	
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>
	
	<!-- MyBatis Setting -->
	<!--
		SqlSessionFactory: 데이터베이스와의 연결과 SQL의 실행에 대한 모든 것을 가진 가장 중요한 객체
		SqlSessionFactoryBean 클래스: SqlSessionFactory를 생성해주는 객체를 설정해줌
		SqlSession: 이를 통해 Connection을 생성하거나 원하는 SQL을 전달하고 결과를 리턴 받는 구조로 작성함
	-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/mybatis-config.xml" /><!-- mybatis의 설정 파일 위치 -->
		<property name="mapperLocations" value="classpath:query/*.xml" /><!-- mybatis mapper xml 파일 위치 -->
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"><value>com.kap.**.**.dao</value></property>
	</bean>
</beans>
